def get_recommendation(score):
    if score >= 10:
        return "Projet tr√®s prometteur : lancez-vous avec un plan structur√© !"
    elif 5 <= score < 10:
        return "Projet int√©ressant mais √† cadrer davantage. Recommand√© : une phase de cadrage ou POC."
    else:
        return "Projet risqu√© : clarifiez vos objectifs et renforcez vos donn√©es avant d'investir."

def explain_score(inputs):
    msg = ""

    if inputs["goal_clarity"] == "vague":
        msg += "- üéØ Les objectifs business sont flous. Clarifiez ce que vous attendez de ce projet.\n"
    if inputs["data_quality"] == "low":
        msg += "- üßπ Vos donn√©es sont de mauvaise qualit√©. Envisagez un nettoyage ou audit avant mod√©lisation.\n"
    if inputs["model_complexity"] == "complexe" and inputs["internal_expertise"] == "faible":
        msg += "- ‚ö†Ô∏è Attention : mod√®le complexe avec peu d‚Äôexpertise en interne = risque √©lev√©.\n"
    if inputs["estimated_business_value"] == "faible":
        msg += "- üìâ La valeur business potentielle semble faible : ce projet vaut-il le coup ?\n"
    if inputs["data_structure"] == "d√©sordonn√©e":
        msg += "- üìÇ Vos donn√©es sont d√©sorganis√©es. Structurez-les avant de faire du ML.\n"
    if msg == "":
        msg = "- ‚úÖ Aucun risque majeur d√©tect√©. Vous √™tes sur la bonne voie !"

    return msg
