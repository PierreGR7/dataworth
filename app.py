# Importation des biblioth√®ques n√©cessaires
import streamlit as st
from scoring_logic import evaluate_project
from recommendations import get_recommendation, explain_score

# Configuration de la page Streamlit
st.set_page_config(page_title="Data Worth Advisor", page_icon="üìä")

# En-t√™te de l'application
st.title("üìä Data Worth Advisor")
st.markdown("√âvaluez la **rentabilit√©** et la **faisabilit√©** de vos projets data.")

# Cr√©ation du formulaire principal pour la saisie des informations du projet
with st.form("project_form"):
    st.header("üîç D√©taillez votre projet")

    # Section 1: Informations sur les donn√©es
    data_quality = st.selectbox("Qualit√© des donn√©es", ["low", "medium", "high"])
    goal_clarity = st.selectbox("Clart√© des objectifs business", ["vague", "moyenne", "claire"])
    volume = st.number_input("Nombre de lignes de donn√©es", min_value=0)
    budget = st.number_input("Budget pr√©vu (‚Ç¨)", min_value=0)

    # Section 2: Informations sur le projet
    model_complexity = st.selectbox("Complexit√© du mod√®le envisag√©", ["simple", "interm√©diaire", "complexe"])
    internal_expertise = st.selectbox("Niveau d'expertise data interne", ["faible", "moyen", "√©lev√©"])
    estimated_business_value = st.selectbox("Valeur potentielle business", ["faible", "moyenne", "√©lev√©e"])
    data_structure = st.selectbox("Structuration des donn√©es", ["d√©sordonn√©e", "semi-structur√©e", "bien structur√©e"])

    # Bouton de soumission du formulaire
    submitted = st.form_submit_button("√âvaluer le projet")

# Traitement des donn√©es apr√®s soumission du formulaire
if submitted:
    # Cr√©ation du dictionnaire des entr√©es
    inputs = {
        "data_quality": data_quality,
        "goal_clarity": goal_clarity,
        "volume": volume,
        "budget": budget,
        "model_complexity": model_complexity,
        "internal_expertise": internal_expertise,
        "estimated_business_value": estimated_business_value,
        "data_structure": data_structure,
    }

    # √âvaluation du projet et g√©n√©ration des r√©sultats
    score = evaluate_project(inputs)
    recommendation = get_recommendation(score)
    explanation = explain_score(inputs)

    # Affichage des r√©sultats
    st.subheader("üßÆ Score du projet : {}".format(score))
    st.success("‚úÖ " + recommendation)
    st.markdown("### üìã Analyse d√©taill√©e :")
    st.markdown(explanation)
